syntax = "proto3";
package api;

import "Proto/iam/iam.proto";
import "Proto/flags/flags.proto";
import "Proto/userinfo/userinfo.proto";
import "Proto/wallet/wallet.proto";
import "Proto/vip/vip.proto";
import "Proto/message/message.proto";

option go_package = "github.com/leepala/OldGeneralBackend/Proto/api";

service api {
    // iam
    rpc IAMLogin(iam.IamLoginRequest) returns (iam.IamLoginReply);
    rpc IAMRegister(iam.CreateUserRequest) returns (iam.CreateUserReply);
    rpc IAMCheckLoginStatus(iam.IamCheckStatusRequest) returns (iam.IamCheckStatusReply);

    // wallet
    rpc GetCurrentMoney(wallet.GetCurrentMoneyRequest) returns (wallet.GetCurrentMoneyReply);
    rpc UpdateMoney(wallet.UpdateMoneyRequest) returns (wallet.UpdateMoneyReply);

    // vip
    rpc ChargeVipRequest(vip.ChargeVipRequest) returns (vip.ChargeVipReply);
    rpc GetVipStatus(vip.GetVipStatusRequest) returns (vip.GetVipStatusReply);

    // userInfo
    rpc GetUserInfo(userinfo.GetUserInfoRequest) returns (userinfo.GetUserInfoReply);
    rpc UpdateUserInfo(userinfo.UpdateUserInfoRequest) returns (userinfo.UpdateUserInfoReply);

    // message
    rpc FetchMessage(message.FetchMessageRequest) returns (message.FetchMessageReply);
    rpc GetRealTimeMessage(message.GetRealTimeMessageRequest) returns (message.GetRealTimeMessageReply);

    // flags
    rpc SearchMyFlag(flags.SearchMyFlagRequest) returns (flags.SearchMyFlagReply);
    rpc GetFlagDetail(flags.GetFlagDetailRequest) returns (flags.GetFlagDetailReply);
    rpc CreateFlag(flags.CreateFlagRequest) returns (flags.CreateFlagReply);
    rpc FetchFlagSquare(flags.FetchFlagSquareRequest) returns (flags.FetchFlagSquareReply);
    rpc GetSignInInfo(flags.GetSignInInfoRequest) returns (flags.GetSignInInfoReply);
    rpc SignInFlag(flags.SignInFlagRequest) returns (flags.SignInFlagReply);
}
